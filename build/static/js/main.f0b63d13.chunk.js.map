{"version":3,"sources":["redux/actions/index.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/index.js","images/login-icon.svg","images/myWalletCrp.png","pages/Login.js","images/myWallet2.png","components/Header.js","components/Table.js","components/Form.js","pages/Wallet.js","App.js","index.js"],"names":["SAVE_USER_INFO","SAVE_WALLET_CURRENCIES","SAVE_WALLET_EXPENSES","REMOVE_ITEM","UPDATE_EDITOR","UPDATE_WALLET_ITEM","walletCurrenciesThunk","dispatch","fetch","then","response","json","data","currencies","Object","keys","splice","indexOf","type","payload","walletExpensesThunk","expense","exchangeRates","walletExpenses","INITIAL_STATE","email","user","state","action","expenses","editor","idToEdit","wallet","filter","item","id","map","index","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","handleChange","target","value","name","setState","handleClick","props","history","push","validateLogin","password","isEmailOk","includes","isPasswordOk","length","this","className","href","rel","src","LoginImg","alt","myWallet2","placeholder","onChange","autoComplete","disabled","onClick","React","Component","connect","Header","sumExpenses","currency","Number","ask","reduce","acc","number","toFixed","totalExpense","myWallet","global","Table","removeItem","updateEd","key","description","tag","method","split","size","Form","updateWalletItem","htmlFor","Wallet","App","exact","path","component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f0b63d13.chunk.js","sourcesContent":["export const SAVE_USER_INFO = 'SAVE_USER_INFO';\nexport const SAVE_WALLET_CURRENCIES = 'SAVE_WALLET_CURRENCIES';\nexport const SAVE_WALLET_EXPENSES = 'SAVE_WALLET_EXPENSES';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const UPDATE_EDITOR = 'UPDATE_EDITOR';\nexport const UPDATE_WALLET_ITEM = 'UPDATE_WALLET_ITEM';\n\nexport const userActionCreator = (payload) => ({ type: SAVE_USER_INFO, payload });\n\nexport const walletCurrencies = (payload) => ({ type: SAVE_WALLET_CURRENCIES, payload });\n\nexport const walletExpenses = (payload) => ({ type: SAVE_WALLET_EXPENSES, payload });\n\nexport const removeWalletItem = (payload) => ({ type: REMOVE_ITEM, payload });\n\nexport const updateEditor = (payload) => ({ type: UPDATE_EDITOR, payload });\n\nexport const updateWalletItem = (payload, idToEdit) => ({\n  type: UPDATE_WALLET_ITEM, payload, idToEdit,\n});\n\nexport const walletCurrenciesThunk = () => (dispatch) => {\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => response.json())\n    .then((data) => {\n      const currencies = Object.keys(data);\n      currencies.splice(currencies.indexOf('USDT'), 1);\n      dispatch(walletCurrencies(currencies));\n    });\n};\n\nexport const walletExpensesThunk = (expense) => (dispatch) => {\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => response.json())\n    .then((data) => {\n      const payload = {\n        ...expense,\n        exchangeRates: data,\n      };\n      dispatch(walletExpenses(payload));\n    });\n};\n","import { SAVE_USER_INFO } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_USER_INFO:\n    return {\n      ...state,\n      email: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import { REMOVE_ITEM, SAVE_WALLET_CURRENCIES, SAVE_WALLET_EXPENSES, UPDATE_EDITOR,\n  UPDATE_WALLET_ITEM } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_WALLET_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  case SAVE_WALLET_EXPENSES:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n      editor: false,\n    };\n  case REMOVE_ITEM:\n    return {\n      ...state,\n      expenses: state.expenses\n        .filter((item) => item.id !== action.payload.id)\n        .map((item, index) => ({\n          ...item,\n          id: index,\n        })),\n    };\n  case UPDATE_EDITOR:\n    return {\n      ...state,\n      editor: true,\n      idToEdit: action.payload,\n    };\n  case UPDATE_WALLET_ITEM:\n    return {\n      ...state,\n      editor: false,\n      expenses: state.expenses.map((item) => {\n        if (item.id === action.idToEdit) {\n          return {\n            ...action.payload,\n            exchangeRates: item.exchangeRates,\n            id: action.idToEdit,\n          };\n        }\n        return item;\n      }),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/login-icon.3f4829d6.svg\";","export default __webpack_public_path__ + \"static/media/myWalletCrp.5d327ab0.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { userActionCreator } from '../redux/actions';\nimport LoginImg from '../images/login-icon.svg';\nimport myWallet2 from '../images/myWalletCrp.png';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  }\n\n  handleClick = () => {\n    const { email } = this.state;\n    const { dispatch, history } = this.props;\n    dispatch(userActionCreator(email));\n    history.push('/carteira');\n  }\n\n  validateLogin = () => {\n    const { email, password } = this.state;\n    const minNumber = 6;\n    const isEmailOk = email.includes('@') && email.includes('.com');\n    const isPasswordOk = password.length >= minNumber;\n\n    return !(isEmailOk && isPasswordOk);\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <main className=\"login-page\">\n        <section className=\"img-section\">\n          <a href=\"https://storyset.com/money\" target=\"_blank\" rel=\"noreferrer\">\n            <img src={LoginImg} alt=\"Wallet Icon\" className=\"login-img\"/>\n          </a>\n        </section>\n        <section className=\"form-page\">\n          <section className=\"login-card\">\n            <img src={myWallet2} alt=\"myWallet Icon\" className=\"title-img\"/>\n            <form className=\"form\">\n              <input\n                type=\"text\"\n                className=\"email-input\"\n                placeholder=\"e-mail\"\n                name=\"email\"\n                value={ email }\n                onChange={ this.handleChange }\n                autoComplete=\"off\"\n              />\n              <div className=\"underline underline-1\"></div>\n              <input\n                type=\"password\"\n                className=\"password-input\"\n                placeholder=\"password\"\n                name=\"password\"\n                value={ password }\n                onChange={ this.handleChange }\n              />\n              <div className=\"underline underline-2\"></div>\n            </form>\n            <button\n              type=\"button\"\n              disabled={ this.validateLogin() }\n              onClick={ this.handleClick }\n              className=\"login-button\"\n            >\n              LOGIN\n            </button>\n          </section>\n        </section>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect()(Login);\n","export default __webpack_public_path__ + \"static/media/myWallet2.4c3ac7de.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport myWallet from '../images/myWallet2.png';\nimport './Header.css';\n\nclass Header extends React.Component {\n  sumExpenses = () => {\n    const { expenses } = this.props;\n    if (expenses.length) {\n      return expenses.map(({ value, currency, exchangeRates }) => (\n        Number(value) * exchangeRates[currency].ask\n      )).reduce((acc, number) => acc + number).toFixed(2);\n    }\n    return 0;\n  }\n\n  render() {\n    const { email } = this.props;\n    const totalExpense = this.sumExpenses();\n    return (\n      <header className=\"header\">\n        <div>\n          <img src={myWallet} alt=\"myWallet Icon\" className=\"header-img\"/>\n        </div>\n        <p className=\"expense\">{`Total: R$ ${totalExpense} (BRL)`}</p>\n        <p className=\"emailElement\">{email}</p>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (global) => ({\n  email: global.user.email,\n  expenses: global.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BiEdit } from 'react-icons/bi';\nimport { MdDeleteForever } from 'react-icons/md';\nimport PropTypes from 'prop-types';\nimport { removeWalletItem, updateEditor } from '../redux/actions';\nimport './Table.css';\n\nclass Table extends React.Component {\n  render() {\n    const { expenses, removeItem, updateEd } = this.props;\n    const headElements = ['Description', 'Category', 'Payment method', 'Value', 'Currency',\n      'Exchange rate', 'Converted value', 'Converted to', 'Edit | Remove'];\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {headElements.map((item) => (\n              <th key={ item }>{item}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {expenses\n            .map(({ description, tag, method, currency, value, exchangeRates, id }) => (\n              <tr key={ description + id }>\n                <td>{description}</td>\n                <td>{tag}</td>\n                <td>{method}</td>\n                <td>{Number(value).toFixed(2)}</td>\n                <td>{exchangeRates[currency].name.split('/')[0]}</td>\n                <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n                <td>{(Number(value) * exchangeRates[currency].ask).toFixed(2)}</td>\n                <td>Real</td>\n                <td>\n                  <BiEdit\n                    size={29}\n                    className=\"edit-button\"\n                    onClick={ () => updateEd(id) }\n                  />\n                  <MdDeleteForever\n                    size={30}\n                    className=\"remove-button\"\n                    onClick={ () => removeItem({ id, description }) }\n                  />\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (global) => ({\n  expenses: global.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeItem: (item) => dispatch(removeWalletItem(item)),\n  updateEd: (id) => dispatch(updateEditor(id)),\n});\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  updateEd: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { walletExpensesThunk, updateWalletItem } from '../redux/actions';\nimport './Form.css';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Cash',\n      tag: 'Food',\n    };\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  handleClick = () => {\n    const { dispatch, expenses, editor, idToEdit } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    const expense = {\n      id: expenses.length,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    };\n    if (editor) {\n      dispatch(updateWalletItem(expense, idToEdit));\n    } else {\n      dispatch(walletExpensesThunk(expense));\n    }\n    this.setState({ value: '', description: '' });\n  }\n\n  render() {\n    const { currencies, editor } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    const categories = ['Food', 'Leisure', 'Work', 'Transport', 'Health'];\n    return (\n      <form className=\"wallet-form\">\n        <label htmlFor=\"value\" className=\"form-label\">\n          Value\n          <input\n            type=\"number\"\n            name=\"value\"\n            id=\"value\"\n            placeholder=\"e.g., 10.50 \"\n            className=\"name-input\"\n            value={ value }\n            onChange={ this.handleChange }\n            autoComplete=\"off\"\n          />\n        </label>\n        <label htmlFor=\"description\" className=\"form-label\">\n          Description\n          <input\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            placeholder=\"e.g., Movies, Sandwich\"\n            className=\"desc-input\"\n            value={ description }\n            onChange={ this.handleChange }\n            autoComplete=\"off\"\n          />\n        </label>\n        <label htmlFor=\"currency\" className=\"form-label\">\n          Currency\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            value={ currency }\n            onChange={ this.handleChange }\n          >\n            {currencies.map((item, index) => (\n              <option\n                key={ item + index }\n                value={ item }\n              >\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\" className=\"form-label\">\n          Payment method\n          <select\n            name=\"method\"\n            id=\"method\"\n            value={ method }\n            onChange={ this.handleChange }\n          >\n            <option value=\"Dinheiro\">Cash</option>\n            <option value=\"Cartão de crédito\">Credit card</option>\n            <option value=\"Cartão de débito\">Debit card</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\" className=\"form-label\">\n          Category\n          <select\n            id=\"tag\"\n            name=\"tag\"\n            tag={ tag }\n            onChange={ this.handleChange }\n          >\n            {categories.map((item, index) => (\n              <option key={ item + index } value={ item }>{item}</option>\n            ))}\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          className=\"form-button\"\n          onClick={ this.handleClick }\n        >\n          {editor ? 'Edit' : 'Add'}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (global) => ({\n  currencies: global.wallet.currencies,\n  expenses: global.wallet.expenses,\n  editor: global.wallet.editor,\n  idToEdit: global.wallet.idToEdit,\n});\n\nForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editor: PropTypes.bool.isRequired,\n  idToEdit: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { walletCurrenciesThunk } from '../redux/actions';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport Form from '../components/Form';\nimport './Wallet.css';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(walletCurrenciesThunk());\n  }\n\n  render() {\n    return (\n      <main className=\"main-wallet\">\n        <Header />\n        <Form />\n        <Table />\n      </main>\n    );\n  }\n}\n\nWallet.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}